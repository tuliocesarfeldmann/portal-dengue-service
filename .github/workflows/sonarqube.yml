name: Actions

on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    outputs:
      PROJECT_VERSION: ${{ steps.get-version.outputs.PROJECT_VERSION }}

    services:
      db:
        image: michelforschufsm/portal-dengue-db:latest
        volumes:
          - portal_dengue_db:/var/lib/mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: teste
          MYSQL_DATABASE: portal_dengue
          MYSQL_USER: teste
          MYSQL_PASSWORD: teste

    steps:
      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping --host=127.0.0.1 --password=$MYSQL_ROOT_PASSWORD --silent; do
            sleep 1
          done
    
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Extract project version
        id: get-version
        run: |
          echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_OUTPUT"

      - name: Build project
        env:
          DATABASE_URL: localhost
          DATABASE_NAME: portal_dengue
          DATABASE_USERNAME: teste
          DATABASE_PASSWORD: teste
        run: |
          mvn clean package

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: jar-file-${{ env.PROJECT_VERSION }}
          path: target/portaldengue-${{ env.PROJECT_VERSION }}.jar

  sonar:
    name: Run SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarQube dependencies
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Run SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}
        run: |
          mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=porta-dengue-service \
            -Dsonar.projectName='porta-dengue-service' \
            -DskipTests=true

  docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs:
        - build
        - sonar

    env:
        PROJECT_VERSION: ${{ needs.build.outputs.PROJECT_VERSION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: jar-file-${{ env.PROJECT_VERSION }}
          path: target

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ./Dockerfile-service.dockerfile
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/portal-dengue-service:${{ env.PROJECT_VERSION }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/portal-dengue-service:latest
            
  deploy:
    name: Update App on Server
    runs-on: ubuntu-latest
    needs:
      - docker

    steps:
    - name: Check out code
      uses: actions/checkout@v2
      
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no michel@michelfkf.dev.br << 'EOF'
          cd /home/michel/
          docker compose down
          docker compose pull
          docker compose up -d
        EOF
